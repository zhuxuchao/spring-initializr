buildscript {
	ext {
		{{#buildPropertiesGradle}}
		{{key}} = '{{value}}'
		{{/buildPropertiesGradle}}
	}
	repositories {
		mavenCentral()
		{{^isRelease}}
		maven { url 'https://repo.spring.io/snapshot' }
		maven { url 'https://repo.spring.io/milestone' }
		{{/isRelease}}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		{{#kotlin}}
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		{{#facets.jpa}}
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
		{{/facets.jpa}}
		{{/kotlin}}
	}
}

apply plugin: '{{language}}'
{{#kotlin}}
apply plugin: 'kotlin-spring'
{{#facets.jpa}}
apply plugin: 'kotlin-jpa'
{{/facets.jpa}}
{{/kotlin}}
apply plugin: 'org.springframework.boot'
{{#bootTwoZeroAvailable}}
apply plugin: 'io.spring.dependency-management'
{{/bootTwoZeroAvailable}}
{{#war}}
apply plugin: 'war'
{{/war}}

group = '{{groupId}}'
version = '{{version}}'
sourceCompatibility = '{{javaVersion}}'

repositories {
	mavenCentral()
	{{#repositoryValues}}
	maven { url '{{value.url}}' }
	{{/repositoryValues}}
}

{{^war}}
{{#providedDependencies}}
configurations {
	providedRuntime
}

{{/providedDependencies}}
{{/war}}
{{#hasBuildPropertiesVersions}}
ext {
{{#buildPropertiesVersions}}
	set('{{key}}', '{{value}}')
{{/buildPropertiesVersions}}
}

{{/hasBuildPropertiesVersions}}
dependencies {
	{{#compileDependencies}}
	implementation '{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}'
	{{/compileDependencies}}
	{{#groovy}}
	implementation 'org.codehaus.groovy:groovy'
	{{/groovy}}
	{{#kotlin}}
	implementation "org.jetbrains.kotlin:{{kotlinStdlibArtifactId}}{{^kotlinSupport}}:${kotlinVersion}{{/kotlinSupport}}"
	implementation "org.jetbrains.kotlin:kotlin-reflect{{^kotlinSupport}}:${kotlinVersion}{{/kotlinSupport}}"
	{{/kotlin}}
	{{#runtimeDependencies}}
	runtimeOnly '{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}'
	{{/runtimeDependencies}}
	{{#compileOnlyDependencies}}
	compileOnly '{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}'
	{{/compileOnlyDependencies}}
	{{#annotationProcessorDependencies}}
	annotationProcessor '{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}'
	{{/annotationProcessorDependencies}}
	{{#providedDependencies}}
	providedRuntime '{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}'
	{{/providedDependencies}}
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	{{#testDependencies}}
	testImplementation '{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}'
	{{/testDependencies}}
}
{{#hasBoms}}

dependencyManagement {
	imports {
		{{#reversedBoms}}
		mavenBom "{{groupId}}:{{artifactId}}:{{versionToken}}"
		{{/reversedBoms}}
	}
}
{{/hasBoms}}
{{#kotlin}}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']{{#java8OrLater}}
		jvmTarget = '1.8'{{/java8OrLater}}
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']{{#java8OrLater}}
		jvmTarget = '1.8'{{/java8OrLater}}
	}
}
{{/kotlin}}